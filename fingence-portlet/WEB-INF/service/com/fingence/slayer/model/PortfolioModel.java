/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fingence.slayer.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AuditedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Portfolio service. Represents a row in the &quot;fing_Portfolio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.fingence.slayer.model.impl.PortfolioModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.fingence.slayer.model.impl.PortfolioImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see Portfolio
 * @see com.fingence.slayer.model.impl.PortfolioImpl
 * @see com.fingence.slayer.model.impl.PortfolioModelImpl
 * @generated
 */
public interface PortfolioModel extends AuditedModel, BaseModel<Portfolio> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a portfolio model instance should use the {@link Portfolio} interface instead.
	 */

	/**
	 * Returns the primary key of this portfolio.
	 *
	 * @return the primary key of this portfolio
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this portfolio.
	 *
	 * @param primaryKey the primary key of this portfolio
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the portfolio ID of this portfolio.
	 *
	 * @return the portfolio ID of this portfolio
	 */
	public long getPortfolioId();

	/**
	 * Sets the portfolio ID of this portfolio.
	 *
	 * @param portfolioId the portfolio ID of this portfolio
	 */
	public void setPortfolioId(long portfolioId);

	/**
	 * Returns the portfolio name of this portfolio.
	 *
	 * @return the portfolio name of this portfolio
	 */
	@AutoEscape
	public String getPortfolioName();

	/**
	 * Sets the portfolio name of this portfolio.
	 *
	 * @param portfolioName the portfolio name of this portfolio
	 */
	public void setPortfolioName(String portfolioName);

	/**
	 * Returns the investor ID of this portfolio.
	 *
	 * @return the investor ID of this portfolio
	 */
	public long getInvestorId();

	/**
	 * Sets the investor ID of this portfolio.
	 *
	 * @param investorId the investor ID of this portfolio
	 */
	public void setInvestorId(long investorId);

	/**
	 * Returns the wealth advisor ID of this portfolio.
	 *
	 * @return the wealth advisor ID of this portfolio
	 */
	public long getWealthAdvisorId();

	/**
	 * Sets the wealth advisor ID of this portfolio.
	 *
	 * @param wealthAdvisorId the wealth advisor ID of this portfolio
	 */
	public void setWealthAdvisorId(long wealthAdvisorId);

	/**
	 * Returns the relationship manager ID of this portfolio.
	 *
	 * @return the relationship manager ID of this portfolio
	 */
	public long getRelationshipManagerId();

	/**
	 * Sets the relationship manager ID of this portfolio.
	 *
	 * @param relationshipManagerId the relationship manager ID of this portfolio
	 */
	public void setRelationshipManagerId(long relationshipManagerId);

	/**
	 * Returns the institution ID of this portfolio.
	 *
	 * @return the institution ID of this portfolio
	 */
	public long getInstitutionId();

	/**
	 * Sets the institution ID of this portfolio.
	 *
	 * @param institutionId the institution ID of this portfolio
	 */
	public void setInstitutionId(long institutionId);

	/**
	 * Returns the trial of this portfolio.
	 *
	 * @return the trial of this portfolio
	 */
	public boolean getTrial();

	/**
	 * Returns <code>true</code> if this portfolio is trial.
	 *
	 * @return <code>true</code> if this portfolio is trial; <code>false</code> otherwise
	 */
	public boolean isTrial();

	/**
	 * Sets whether this portfolio is trial.
	 *
	 * @param trial the trial of this portfolio
	 */
	public void setTrial(boolean trial);

	/**
	 * Returns the primary of this portfolio.
	 *
	 * @return the primary of this portfolio
	 */
	public boolean getPrimary();

	/**
	 * Returns <code>true</code> if this portfolio is primary.
	 *
	 * @return <code>true</code> if this portfolio is primary; <code>false</code> otherwise
	 */
	public boolean isPrimary();

	/**
	 * Sets whether this portfolio is primary.
	 *
	 * @param primary the primary of this portfolio
	 */
	public void setPrimary(boolean primary);

	/**
	 * Returns the social of this portfolio.
	 *
	 * @return the social of this portfolio
	 */
	public boolean getSocial();

	/**
	 * Returns <code>true</code> if this portfolio is social.
	 *
	 * @return <code>true</code> if this portfolio is social; <code>false</code> otherwise
	 */
	public boolean isSocial();

	/**
	 * Sets whether this portfolio is social.
	 *
	 * @param social the social of this portfolio
	 */
	public void setSocial(boolean social);

	/**
	 * Returns the base currency of this portfolio.
	 *
	 * @return the base currency of this portfolio
	 */
	@AutoEscape
	public String getBaseCurrency();

	/**
	 * Sets the base currency of this portfolio.
	 *
	 * @param baseCurrency the base currency of this portfolio
	 */
	public void setBaseCurrency(String baseCurrency);

	/**
	 * Returns the create date of this portfolio.
	 *
	 * @return the create date of this portfolio
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this portfolio.
	 *
	 * @param createDate the create date of this portfolio
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this portfolio.
	 *
	 * @return the modified date of this portfolio
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this portfolio.
	 *
	 * @param modifiedDate the modified date of this portfolio
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the company ID of this portfolio.
	 *
	 * @return the company ID of this portfolio
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this portfolio.
	 *
	 * @param companyId the company ID of this portfolio
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this portfolio.
	 *
	 * @return the user ID of this portfolio
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this portfolio.
	 *
	 * @param userId the user ID of this portfolio
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this portfolio.
	 *
	 * @return the user uuid of this portfolio
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this portfolio.
	 *
	 * @param userUuid the user uuid of this portfolio
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this portfolio.
	 *
	 * @return the user name of this portfolio
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this portfolio.
	 *
	 * @param userName the user name of this portfolio
	 */
	@Override
	public void setUserName(String userName);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Portfolio portfolio);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Portfolio> toCacheModel();

	@Override
	public Portfolio toEscapedModel();

	@Override
	public Portfolio toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}