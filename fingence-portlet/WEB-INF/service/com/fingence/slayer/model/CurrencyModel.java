/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fingence.slayer.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Currency service. Represents a row in the &quot;fing_Currency&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.fingence.slayer.model.impl.CurrencyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.fingence.slayer.model.impl.CurrencyImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see Currency
 * @see com.fingence.slayer.model.impl.CurrencyImpl
 * @see com.fingence.slayer.model.impl.CurrencyModelImpl
 * @generated
 */
public interface CurrencyModel extends BaseModel<Currency> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a currency model instance should use the {@link Currency} interface instead.
	 */

	/**
	 * Returns the primary key of this currency.
	 *
	 * @return the primary key of this currency
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this currency.
	 *
	 * @param primaryKey the primary key of this currency
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the currency ID of this currency.
	 *
	 * @return the currency ID of this currency
	 */
	public long getCurrencyId();

	/**
	 * Sets the currency ID of this currency.
	 *
	 * @param currencyId the currency ID of this currency
	 */
	public void setCurrencyId(long currencyId);

	/**
	 * Returns the currency code of this currency.
	 *
	 * @return the currency code of this currency
	 */
	@AutoEscape
	public String getCurrencyCode();

	/**
	 * Sets the currency code of this currency.
	 *
	 * @param currencyCode the currency code of this currency
	 */
	public void setCurrencyCode(String currencyCode);

	/**
	 * Returns the currency desc of this currency.
	 *
	 * @return the currency desc of this currency
	 */
	@AutoEscape
	public String getCurrencyDesc();

	/**
	 * Sets the currency desc of this currency.
	 *
	 * @param currencyDesc the currency desc of this currency
	 */
	public void setCurrencyDesc(String currencyDesc);

	/**
	 * Returns the conversion of this currency.
	 *
	 * @return the conversion of this currency
	 */
	public double getConversion();

	/**
	 * Sets the conversion of this currency.
	 *
	 * @param conversion the conversion of this currency
	 */
	public void setConversion(double conversion);

	/**
	 * Returns the currency symbol of this currency.
	 *
	 * @return the currency symbol of this currency
	 */
	@AutoEscape
	public String getCurrencySymbol();

	/**
	 * Sets the currency symbol of this currency.
	 *
	 * @param currencySymbol the currency symbol of this currency
	 */
	public void setCurrencySymbol(String currencySymbol);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Currency currency);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Currency> toCacheModel();

	@Override
	public Currency toEscapedModel();

	@Override
	public Currency toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}