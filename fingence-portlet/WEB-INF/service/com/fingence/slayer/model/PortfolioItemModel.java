/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fingence.slayer.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the PortfolioItem service. Represents a row in the &quot;fing_PortfolioItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.fingence.slayer.model.impl.PortfolioItemModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.fingence.slayer.model.impl.PortfolioItemImpl}.
 * </p>
 *
 * @author Ahmed Hasan
 * @see PortfolioItem
 * @see com.fingence.slayer.model.impl.PortfolioItemImpl
 * @see com.fingence.slayer.model.impl.PortfolioItemModelImpl
 * @generated
 */
public interface PortfolioItemModel extends BaseModel<PortfolioItem> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a portfolio item model instance should use the {@link PortfolioItem} interface instead.
	 */

	/**
	 * Returns the primary key of this portfolio item.
	 *
	 * @return the primary key of this portfolio item
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this portfolio item.
	 *
	 * @param primaryKey the primary key of this portfolio item
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the item ID of this portfolio item.
	 *
	 * @return the item ID of this portfolio item
	 */
	public long getItemId();

	/**
	 * Sets the item ID of this portfolio item.
	 *
	 * @param itemId the item ID of this portfolio item
	 */
	public void setItemId(long itemId);

	/**
	 * Returns the asset ID of this portfolio item.
	 *
	 * @return the asset ID of this portfolio item
	 */
	public long getAssetId();

	/**
	 * Sets the asset ID of this portfolio item.
	 *
	 * @param assetId the asset ID of this portfolio item
	 */
	public void setAssetId(long assetId);

	/**
	 * Returns the portfolio ID of this portfolio item.
	 *
	 * @return the portfolio ID of this portfolio item
	 */
	public long getPortfolioId();

	/**
	 * Sets the portfolio ID of this portfolio item.
	 *
	 * @param portfolioId the portfolio ID of this portfolio item
	 */
	public void setPortfolioId(long portfolioId);

	/**
	 * Returns the purchase date of this portfolio item.
	 *
	 * @return the purchase date of this portfolio item
	 */
	public Date getPurchaseDate();

	/**
	 * Sets the purchase date of this portfolio item.
	 *
	 * @param purchaseDate the purchase date of this portfolio item
	 */
	public void setPurchaseDate(Date purchaseDate);

	/**
	 * Returns the purchase price of this portfolio item.
	 *
	 * @return the purchase price of this portfolio item
	 */
	public double getPurchasePrice();

	/**
	 * Sets the purchase price of this portfolio item.
	 *
	 * @param purchasePrice the purchase price of this portfolio item
	 */
	public void setPurchasePrice(double purchasePrice);

	/**
	 * Returns the purchase qty of this portfolio item.
	 *
	 * @return the purchase qty of this portfolio item
	 */
	public double getPurchaseQty();

	/**
	 * Sets the purchase qty of this portfolio item.
	 *
	 * @param purchaseQty the purchase qty of this portfolio item
	 */
	public void setPurchaseQty(double purchaseQty);

	/**
	 * Returns the purchased fx of this portfolio item.
	 *
	 * @return the purchased fx of this portfolio item
	 */
	public double getPurchasedFx();

	/**
	 * Sets the purchased fx of this portfolio item.
	 *
	 * @param purchasedFx the purchased fx of this portfolio item
	 */
	public void setPurchasedFx(double purchasedFx);

	/**
	 * Returns the create date of this portfolio item.
	 *
	 * @return the create date of this portfolio item
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this portfolio item.
	 *
	 * @param createDate the create date of this portfolio item
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this portfolio item.
	 *
	 * @return the modified date of this portfolio item
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this portfolio item.
	 *
	 * @param modifiedDate the modified date of this portfolio item
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(PortfolioItem portfolioItem);

	@Override
	public int hashCode();

	@Override
	public CacheModel<PortfolioItem> toCacheModel();

	@Override
	public PortfolioItem toEscapedModel();

	@Override
	public PortfolioItem toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}